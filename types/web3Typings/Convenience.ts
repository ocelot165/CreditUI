/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type BN from "bn.js";
import type { ContractOptions } from "web3-eth-contract";
import type { EventLog } from "web3-core";
import type { EventEmitter } from "events";
import type {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type Initialized = ContractEventLog<{
  version: string;
  0: string;
}>;

export interface Convenience extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): Convenience;
  clone(): Convenience;
  methods: {
    borrowGivenCollateral(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    borrowGivenCollateralETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    borrowGivenCollateralETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    borrowGivenDebt(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    borrowGivenDebtETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    borrowGivenDebtETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    borrowGivenPercent(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    borrowGivenPercentETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    borrowGivenPercentETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: [string, string, string];
    }>;

    collect(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN
      ]
    ): NonPayableTransactionObject<[string, string]>;

    collectETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN
      ]
    ): NonPayableTransactionObject<[string, string]>;

    collectETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN
      ]
    ): NonPayableTransactionObject<[string, string]>;

    creditPosition(): NonPayableTransactionObject<string>;

    deployNatives(
      params: [string, string, number | string | BN, number | string | BN]
    ): NonPayableTransactionObject<void>;

    deployPair(params: [string, string]): NonPayableTransactionObject<void>;

    factory(): NonPayableTransactionObject<string>;

    getNative(
      asset: string,
      collateral: string,
      maturity: number | string | BN
    ): NonPayableTransactionObject<
      [string, string, string, string, string, string]
    >;

    initialize(
      _factory: string,
      _weth: string,
      _creditPosition: string
    ): NonPayableTransactionObject<void>;

    lendGivenBond(
      params: [
        string,
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    lendGivenBondETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    lendGivenBondETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    lendGivenInsurance(
      params: [
        string,
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    lendGivenInsuranceETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    lendGivenInsuranceETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    lendGivenPercent(
      params: [
        string,
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    lendGivenPercentETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    lendGivenPercentETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      claimsOut: [string, string, string, string];
      0: string;
      1: [string, string, string, string];
    }>;

    liquidityGivenAsset(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    liquidityGivenAssetETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    liquidityGivenAssetETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    liquidityGivenCollateral(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    liquidityGivenCollateralETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    liquidityGivenCollateralETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    liquidityGivenDebt(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    liquidityGivenDebtETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    liquidityGivenDebtETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    newLiquidity(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    newLiquidityETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    newLiquidityETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      liquidityOut: string;
      id: string;
      dueOut: [string, string, string];
      0: string;
      1: string;
      2: string;
      3: [string, string, string];
    }>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: number | string | BN,
      arg3: string | number[]
    ): NonPayableTransactionObject<string>;

    removeLiquidity(
      params: [
        string,
        string,
        number | string | BN,
        string,
        string,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      collateralOut: string;
      0: string;
      1: string;
    }>;

    removeLiquidityETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      collateralOut: string;
      0: string;
      1: string;
    }>;

    removeLiquidityETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        string,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetOut: string;
      collateralOut: string;
      0: string;
      1: string;
    }>;

    repay(
      params: [
        string,
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      collateralOut: string;
      0: string;
      1: string;
    }>;

    repayETHAsset(
      params: [
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN
      ]
    ): PayableTransactionObject<{
      assetIn: string;
      collateralOut: string;
      0: string;
      1: string;
    }>;

    repayETHCollateral(
      params: [
        string,
        number | string | BN,
        string,
        number | string | BN,
        number | string | BN
      ]
    ): NonPayableTransactionObject<{
      assetIn: string;
      collateralOut: string;
      0: string;
      1: string;
    }>;

    timeswapBorrowCallback(
      collateralIn: number | string | BN,
      data: string | number[]
    ): NonPayableTransactionObject<void>;

    timeswapLendCallback(
      assetIn: number | string | BN,
      data: string | number[]
    ): NonPayableTransactionObject<void>;

    timeswapMintCallback(
      assetIn: number | string | BN,
      collateralIn: number | string | BN,
      data: string | number[]
    ): NonPayableTransactionObject<void>;

    timeswapPayCallback(
      assetIn: number | string | BN,
      data: string | number[]
    ): NonPayableTransactionObject<void>;

    weth(): NonPayableTransactionObject<string>;
  };
  events: {
    Initialized(cb?: Callback<Initialized>): EventEmitter;
    Initialized(
      options?: EventOptions,
      cb?: Callback<Initialized>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "Initialized", cb: Callback<Initialized>): void;
  once(
    event: "Initialized",
    options: EventOptions,
    cb: Callback<Initialized>
  ): void;
}
